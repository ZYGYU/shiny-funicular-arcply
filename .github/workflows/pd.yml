name: Extend PixelDrain Link Lifetime

on:
  workflow_dispatch:

jobs:
  view-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Puppeteer
        run: |
          npm install puppeteer

      - name: Read and View PixelDrain Links
        run: |
          node <<EOF
          const fs = require('fs');
          const puppeteer = require('puppeteer');

          (async () => {
            try {
              // Baca file links.txt
              const filePath = './links.txt';
              if (!fs.existsSync(filePath)) {
                console.error("File links.txt tidak ditemukan.");
                process.exit(1);
              }

              const fileContent = fs.readFileSync(filePath, 'utf-8');
              const links = fileContent
                .split('\n') // Pisahkan per baris
                .map(link => link.trim()) // Hapus spasi ekstra
                .filter(link => link && link.startsWith('https://pixeldrain.com/u/')); // Validasi link

              if (links.length === 0) {
                console.error("Tidak ada link yang valid di file links.txt.");
                process.exit(1);
              }

              // Mulai Puppeteer
              const browser = await puppeteer.launch({
                headless: true,
                args: ['--no-sandbox', '--disable-setuid-sandbox']
              });

              const page = await browser.newPage();
              for (const link of links) {
                console.log(`Visiting: ${link}`);
                try {
                  await page.goto(link, { waitUntil: 'networkidle2' });
                  await new Promise(resolve => setTimeout(resolve, 5000)); // Tunggu 5 detik
                } catch (err) {
                  console.error(`Gagal mengunjungi link: ${link}, Error: ${err.message}`);
                }
              }

              await browser.close();
              console.log("Semua link telah dikunjungi.");
            } catch (err) {
              console.error("Terjadi kesalahan:", err.message);
              process.exit(1);
            }
          })();
          EOF
