name: Download TikTok and Send to Telegram

on:
  workflow_dispatch:
  schedule:
    - cron: '0 17 * * *'  # Runs daily at 17:00 UTC

permissions:
  contents: write

jobs:
  download-and-send:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y yt-dlp

    - name: Save Cookies to File
      env:
        TT_COOKIES: ${{ secrets.TT_COOKIES }}
      run: |
        echo "$TT_COOKIES" > cookies.txt

    - name: Download TikTok Video
      env:
        TIKTOK_URL: 'https://www.tiktok.com/@user/video/7458204807241731335'
      run: |
        yt-dlp -v --cookies cookies.txt -o '/tmp/video.mp4' "$TIKTOK_URL"

    - name: Capture and Update Bandwidth Usage
      run: |
       # Define file path for storing cumulative bandwidth usage
       BANDWIDTH_FILE="bandwidth_usage.txt"

       # Extract current RX and TX data from ifconfig
       RX=$(ifconfig eth0 | grep 'RX packets' | awk '{print $5}')  # Received bytes
       TX=$(ifconfig eth0 | grep 'TX packets' | awk '{print $5}')  # Transmitted bytes
       RX_MB=$(echo "$RX / 1048576" | bc)  # Convert to MB
       TX_MB=$(echo "$TX / 1048576" | bc)  # Convert to MB
  
       # Initialize cumulative variables
       TOTAL_RX=$RX_MB
       TOTAL_TX=$TX_MB

       # If a previous file exists, read its data
       if [ -f "$BANDWIDTH_FILE" ]; then
         PREV_RX=$(grep "Received" "$BANDWIDTH_FILE" | awk '{print $2}')  # Extract previous RX
         PREV_TX=$(grep "Transmitted" "$BANDWIDTH_FILE" | awk '{print $2}')  # Extract previous TX

       # Add previous data to current data
        TOTAL_RX=$(echo "$PREV_RX + $RX_MB" | bc)
        TOTAL_TX=$(echo "$PREV_TX + $TX_MB" | bc)
       fi

       # Save the updated data back to the file
       echo "Bandwidth Usage All Time:" > "$BANDWIDTH_FILE"
       echo "  Received: $TOTAL_RX MB" >> "$BANDWIDTH_FILE"
       echo "  Transmitted: $TOTAL_TX MB" >> "$BANDWIDTH_FILE"

       # Display the updated data
       cat "$BANDWIDTH_FILE"

       # Commit the updated data to the repository
       git config --local user.name "github-actions"
       git config --local user.email "action@github.com"
       git add "$BANDWIDTH_FILE"
       git commit -m "Update cumulative bandwidth usage"
       git push
       
    - name: Send Video to Telegram
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        curl -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendVideo" \
        -F chat_id=$TELEGRAM_CHAT_ID -F video=@/tmp/video.mp4

    
